DROP DATABASE IF EXISTS STUDENTDB;

CREATE DATABASE STUDENTDB
  CHARSET = 'utf8'
  COLLATE = 'utf8_general_ci';

-- USERS --

CREATE TABLE STUDENTDB.STUDENTS
(
  ID          BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME        VARCHAR(128)    NOT NULL,
  ROLL_NUMBER VARCHAR(16)     NOT NULL UNIQUE,
  GENDER      SMALLINT        NOT NULL,
  DOB         DATE            NOT NULL
);

CREATE TABLE STUDENTDB.ADDRESSES
(
  ID             BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  COUNTRY        VARCHAR (64)    NOT NULL,
  CITY           VARCHAR (64)    NOT NULL,
  STREET_ADDRESS VARCHAR (128)   NOT NULL,
  STUDENT_ID     BIGINT UNSIGNED NOT NULL,
  CONSTRAINT ADDRESSES_STUDENTS_FK
  FOREIGN KEY (STUDENT_ID) REFERENCES STUDENTDB.STUDENTS (ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT
);

CREATE TABLE STUDENTDB.COURSES
(
  ID      BIGINT UNSIGNED  NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME    VARCHAR(128)     NOT NULL,
  HOURS   INTEGER UNSIGNED NOT NULL
);

CREATE TABLE STUDENTDB.INSTRUCTORS
(
  ID      BIGINT UNSIGNED  NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME    VARCHAR(128)     NOT NULL
);

CREATE TABLE STUDENTDB.STUDENT_COURSES
(
  STUDENT_ID BIGINT UNSIGNED NOT NULL,
  COURSE_ID  BIGINT UNSIGNED NOT NULL,
  CONSTRAINT STUDENT_COURSES_STUDENTS_FK
  FOREIGN KEY (STUDENT_ID) REFERENCES STUDENTDB.STUDENTS (ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT STUDENT_COURSES_COURSES_FK
  FOREIGN KEY (COURSE_ID) REFERENCES STUDENTDB.COURSES (ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT
);

CREATE TABLE STUDENTDB.COURSE_INSTRUCTORS
(
  COURSE_ID  BIGINT UNSIGNED NOT NULL,
  INSTRUCTOR_ID BIGINT UNSIGNED NOT NULL,
  CONSTRAINT COURSE_INSTRUCTORS_COURSES_FK
  FOREIGN KEY (COURSE_ID) REFERENCES STUDENTDB.COURSES (ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT COURSE_INSTRUCTORS_INSTRUCTORS_FK
  FOREIGN KEY (INSTRUCTOR_ID) REFERENCES STUDENTDB.INSTRUCTORS (ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT
);
